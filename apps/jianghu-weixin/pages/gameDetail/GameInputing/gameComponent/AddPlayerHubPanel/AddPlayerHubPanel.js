const app = getApp();
const navigationHelper = require('@/utils/navigationHelper.js');

Component({
    /**
     * ÁªÑ‰ª∂ÁöÑÂ±ûÊÄßÂàóË°®
     */
    properties: {
        uuid: {
            type: String,
            value: ''
        },
        gameid: {
            type: String,
            value: ''
        },
        title: {
            type: String,
            value: ''
        },
        groupIndex: {
            type: Number,
            value: 0
        },
        slotIndex: {
            type: Number,
            value: 0
        }
    },

    /**
     * ÁªÑ‰ª∂ÁöÑÂàùÂßãÊï∞ÊçÆ
     */
    data: {
        isVisible: false, // ÊéßÂà∂Èù¢ÊùøÊòæÁ§∫/ÈöêËóè
        qrcodeUrl: '', // ‰∫åÁª¥Á†ÅURL
        loading: false, // Âä†ËΩΩÁä∂ÊÄÅ
        error: '', // ÈîôËØØ‰ø°ÊÅØ
        sharePath: '' // ÂàÜ‰∫´Ë∑ØÂæÑ
    },

    /**
     * ÁªÑ‰ª∂ÁöÑÊñπÊ≥ïÂàóË°®
     */
    methods: {
        // ÊòæÁ§∫Èù¢Êùø
        show(options = {}) {
            console.log('üìã [AddPlayerHubPanel] ÊòæÁ§∫Èù¢Êùø', options);
            this.setData({
                isVisible: true,
                ...options
            }, () => {
                // Èù¢ÊùøÊòæÁ§∫ÂêéÁîüÊàê‰∫åÁª¥Á†Å
                if (this.data.uuid) {
                    this.fetchInviteQrcode();
                }
            });
        },

        // ÈöêËóèÈù¢Êùø
        hide() {
            console.log('üìã [AddPlayerHubPanel] ÈöêËóèÈù¢Êùø');
            this.setData({
                isVisible: false,
                // Ê∏ÖÁ©∫‰∫åÁª¥Á†ÅÁä∂ÊÄÅ
                qrcodeUrl: '',
                error: '',
                loading: false
            });
        },

        // ÈòªÊ≠¢ÂÜíÊ≥°
        stopPropagation() {
            // Á©∫ÂáΩÊï∞, Áî®‰∫éÈòªÊ≠¢ÁÇπÂáªÈù¢ÊùøÂÜÖÂÆπÊó∂ÂÖ≥Èó≠ÂºπÁ™ó
        },

        // ÊûÑÂª∫ÂàÜ‰∫´Ë∑ØÂæÑ
        buildSharePath() {
            const { uuid, gameid, title } = this.data;
            if (!uuid) {
                return '/pages/createGame/createGame';
            }
            const query = [`uuid=${uuid}`];
            if (gameid) {
                query.push(`gameid=${gameid}`);
            }
            if (title) {
                query.push(`title=${encodeURIComponent(title)}`);
            }
            query.push('source=qrcode');
            return `/pages/player-select/joinGame/joinGame?${query.join('&')}`;
        },

        // Ëé∑ÂèñÈÇÄËØ∑‰∫åÁª¥Á†Å
        async fetchInviteQrcode() {
            const { uuid, gameid } = this.data;
            if (!uuid) {
                console.warn('[AddPlayerHubPanel] Áº∫Â∞ë uuidÔºåÊó†Ê≥ïÁîüÊàê‰∫åÁª¥Á†Å');
                // ‰∏çËÆæÁΩÆ errorÔºå‰øùÊåÅ placeholder Áä∂ÊÄÅÔºåËÆ©Áî®Êà∑ÂèØ‰ª•‰ΩøÁî®ÂÖ∂‰ªñÊ∑ªÂä†ÊñπÂºè
                return;
            }

            this.setData({
                loading: true,
                error: '',
                qrcodeUrl: ''
            });

            const sharePath = this.buildSharePath();
            this.setData({ sharePath });

            const payload = {
                uuid,
                path: sharePath
            };

            if (gameid) {
                payload.gameid = gameid;
            }

            try {
                const result = await app.api.game.getGameInviteQrcode(payload, {
                    showLoading: false
                });

                if (result?.code !== 200) {
                    throw new Error(result?.message || '‰∫åÁª¥Á†ÅÁîüÊàêÂ§±Ë¥•');
                }

                const qrcodeUrl = result?.qrcode_url;

                if (!qrcodeUrl) {
                    throw new Error('ÊúçÂä°Á´ØÊú™ËøîÂõû‰∫åÁª¥Á†ÅÂú∞ÂùÄ');
                }

                this.setData({
                    qrcodeUrl
                });
            } catch (error) {
                console.error('[AddPlayerHubPanel] ‰∫åÁª¥Á†ÅÁîüÊàêÂ§±Ë¥•', error);
                this.setData({
                    error: error?.message || '‰∫åÁª¥Á†ÅÁîüÊàêÂ§±Ë¥•'
                });
            } finally {
                this.setData({
                    loading: false
                });
            }
        },

        // ÈáçËØïÁîüÊàê‰∫åÁª¥Á†Å
        handleRetry() {
            this.fetchInviteQrcode();
        },

        // ÊâãÂ∑•Ê∑ªÂä†ÊåâÈíÆÁÇπÂáª
        handleManualAdd() {
            console.log('üìã [AddPlayerHubPanel] ÁÇπÂáªÊâãÂ∑•Ê∑ªÂä†');
            const { groupIndex, slotIndex, uuid, gameid, title } = this.data;

            let url = `/pages/player-select/manualAdd/manualAdd?groupIndex=${groupIndex}&slotIndex=${slotIndex}&scene=gameDetail`;

            if (uuid) {
                url += `&uuid=${uuid}`;
            }
            if (gameid) {
                url += `&gameid=${gameid}`;
            }
            if (title) {
                url += `&title=${encodeURIComponent(title)}`;
            }

            // ÂÖ≥Èó≠Èù¢Êùø
            this.hide();

            // Ë∑≥ËΩ¨Âà∞ÊâãÂ∑•Ê∑ªÂä†È°µÈù¢
            navigationHelper.navigateTo(url).catch(err => {
                console.error('[AddPlayerHubPanel] Ë∑≥ËΩ¨Â§±Ë¥•:', err);
                wx.showToast({
                    title: 'Ë∑≥ËΩ¨Â§±Ë¥•ÔºåËØ∑ÈáçËØï',
                    icon: 'none'
                });
            });
        },

        // Â•ΩÂèãÈÄâÊã©ÊåâÈíÆÁÇπÂáª
        handleFriendSelect() {
            console.log('üìã [AddPlayerHubPanel] ÁÇπÂáªÂ•ΩÂèãÈÄâÊã©');
            const { groupIndex, slotIndex, uuid, gameid, title } = this.data;

            let url = `/pages/player-select/friendSelect/friendSelect?groupIndex=${groupIndex}&slotIndex=${slotIndex}`;

            if (uuid) {
                url += `&uuid=${uuid}`;
            }
            if (gameid) {
                url += `&gameid=${gameid}`;
            }
            if (title) {
                url += `&title=${encodeURIComponent(title)}`;
            }

            // ÂÖ≥Èó≠Èù¢Êùø
            this.hide();

            // Ë∑≥ËΩ¨Âà∞Â•ΩÂèãÈÄâÊã©È°µÈù¢
            navigationHelper.navigateTo(url).catch(err => {
                console.error('[AddPlayerHubPanel] Ë∑≥ËΩ¨Â§±Ë¥•:', err);
                wx.showToast({
                    title: 'Ë∑≥ËΩ¨Â§±Ë¥•ÔºåËØ∑ÈáçËØï',
                    icon: 'none'
                });
            });
        }
    }
}) 